{{- if .Values.consortium.recreated }}
{{ $fullname := include "fabric-deploy-flow.fullname" . }}
{{- range $i, $peerOrg := .Values.consortium.peerOrgs }}
---
apiVersion: batch/v1
kind: Job 
metadata:
  name: {{ $fullname }}-{{ $peerOrg.name }}-init-job
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": "before-hook-creation"
spec:
  template:
    metadata:
      name: {{ $peerOrg.name }}-init-job
    spec:
      restartPolicy: OnFailure
      volumes:
        - name: kubeconfig
          hostPath:
            path: {{ $.Values.dependencies.kubeConfig }}
            type: Directory
        - name: script-api
          configMap:
            name: {{ $fullname }}-script-api
        - name: script-utils
          configMap:
            name: {{ $fullname }}-script-utils
        - name: script-cmd
          configMap:
            name: {{ $fullname }}-script-cmd
      containers:
      - name: {{ $peerOrg.name }}-initcerts
        image: {{ $.Values.dependencies.tools.image }}
        imagePullPolicy: IfNotPresent
        command: 
          - sh 
          - -c
          - |
            sh /script/tools.sh cryptogen --org ${ORG_ID} --type peer --nodes ${ORG_NODES} --import --all
        env:
          - name: ORG_ID
            value: {{ $peerOrg.name }}
          - name: ORG_NODES
            value: {{ $peerOrg.nodes | join "," }}
          - name: GLOBAL_AFFILIATION
            value: {{ $.Values.consortium.affiliation }}
          - name: GLOBAL_CA_SERVER_URL
            value: {{ $peerOrg.caserver | quote }}
        volumeMounts:
          - name: script-api
            mountPath: /script/api
          - name: script-utils
            mountPath: /script/utils
          - name: script-cmd
            mountPath: /script
          - name: kubeconfig
            mountPath: /root/.kube
{{- end }}
{{- end }}