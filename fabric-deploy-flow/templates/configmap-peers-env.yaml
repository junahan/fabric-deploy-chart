{{- range $i, $peerOrg := .Values.consortium.peerOrgs }}
{{- range $i, $node := $peerOrg.nodes }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $node }}-{{ $peerOrg.name }}-peer-env
  namespace:  {{ $peerOrg.name }}
data:
  CORE_PEER_ID: {{ $node }}.{{ $peerOrg.name }}.svc.cluster.local
  CORE_PEER_NETWORKID: dev 
  CORE_PEER_LISTENADDRESS: 0.0.0.0:7051
  CORE_PEER_CHAINCODELISTENADDRESS: 0.0.0.0:7052
  CORE_PEER_LOCALMSPID: {{ $peerOrg.id | quote }}
  CORE_VM_ENDPOINT: "unix:///host/var/run/docker.sock"
  FABRIC_LOGGING_SPEC: "DEBUG"
  CORE_PEER_TLS_ENABLED: "true" 
  # set election way
  CORE_PEER_GOSSIP_USELEADERELECTION: "false" 
  CORE_PEER_GOSSIP_ORGLEADER: "true"  
  CORE_PEER_PROFILE_ENABLED: "true"
  CORE_PEER_MSPCONFIGPATH: "/etc/hyperledger/fabric/peer/msp"
  # peer node cert and key, must be exist when start
  CORE_PEER_TLS_CERT_FILE: "/etc/hyperledger/fabric/tls/pair/tls.crt"
  CORE_PEER_TLS_KEY_FILE: "/etc/hyperledger/fabric/tls/pair/tls.key"
  CORE_PEER_TLS_ROOTCERT_FILE: "/etc/hyperledger/fabric/tls/tlscacert.pem"
  # ccenv setting
  CORE_CHAINCODE_LOGGING_SHIM: "DEBUG"
  CORE_CHAINCODE_LOGGING_LEVEL: "DEBUG"
  CORE_CHAINCODE_BUILDER: "hyperledger/fabric-ccenv:1.4.2"
  CORE_CHAINCODE_GOLANG_RUNTIME: "hyperledger/fabric-baseos:0.4.15" 
{{- end }}
{{- end }}